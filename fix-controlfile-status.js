#!/usr/bin/env node

/**
 * Script para verificar y solucionar el estado de ControlFile
 * Uso: node fix-controlfile-status.js
 */

async function fixControlFileStatus() {
  console.log('üîß SOLUCIONANDO ESTADO DE CONTROLFILE');
  console.log('======================================');
  console.log('');

  const backendUrl = 'https://controlauditv2.onrender.com';
  
  try {
    // 1. Verificar estado actual del backend
    console.log('1Ô∏è‚É£ VERIFICANDO ESTADO DEL BACKEND');
    console.log('----------------------------------');
    
    const healthResponse = await fetch(`${backendUrl}/`);
    if (healthResponse.ok) {
      const healthData = await healthResponse.json();
      console.log('‚úÖ Backend funcionando:', healthData);
      console.log('üåç Entorno:', healthData.environment);
    } else {
      console.log('‚ùå Backend no responde');
      return;
    }
    console.log('');

    // 2. Verificar endpoints de ControlFile
    console.log('2Ô∏è‚É£ VERIFICANDO ENDPOINTS DE CONTROLFILE');
    console.log('----------------------------------------');
    
    const endpoints = [
      { name: 'Health Check', url: '/api/health', method: 'GET' },
      { name: 'User Profile', url: '/api/user/profile', method: 'GET' },
      { name: 'Upload Presign', url: '/api/uploads/presign', method: 'POST' },
      { name: 'Upload Complete', url: '/api/uploads/complete/test', method: 'POST' }
    ];

    for (const endpoint of endpoints) {
      const options = {
        method: endpoint.method,
        headers: { 'Content-Type': 'application/json' }
      };
      
      if (endpoint.method === 'POST' && endpoint.url.includes('presign')) {
        options.body = JSON.stringify({
          fileName: 'test.jpg',
          fileType: 'image/jpeg',
          fileSize: 12345
        });
      }
      
      try {
        const response = await fetch(`${backendUrl}${endpoint.url}`, options);
        console.log(`üì° ${endpoint.name}: ${response.status} ${response.statusText}`);
        
        if (response.status === 200) {
          console.log('   ‚úÖ Endpoint funcionando correctamente');
        } else if (response.status === 401) {
          console.log('   üîê Endpoint requiere autenticaci√≥n (correcto)');
        } else if (response.status === 404) {
          console.log('   ‚ùå Endpoint no implementado');
        } else {
          console.log('   ‚ö†Ô∏è Endpoint con estado inesperado');
        }
      } catch (error) {
        console.log(`üì° ${endpoint.name}: Error de red`);
        console.log('   ‚ùå Endpoint no accesible');
      }
    }
    console.log('');

    // 3. An√°lisis del problema de ControlFile
    console.log('3Ô∏è‚É£ AN√ÅLISIS DEL PROBLEMA DE CONTROLFILE');
    console.log('----------------------------------------');
    console.log('üîç Bas√°ndome en el mensaje que mencionaste:');
    console.log('   ‚úÖ Tu cuenta est√° conectada a ControlFile real');
    console.log('   ‚ùå El servicio ControlFile real no est√° disponible');
    console.log('   ‚úÖ Usando backend local para las pruebas');
    console.log('');
    console.log('üí° DIAGN√ìSTICO:');
    console.log('   ‚Ä¢ El backend est√° funcionando correctamente');
    console.log('   ‚Ä¢ Los endpoints est√°n implementados');
    console.log('   ‚Ä¢ El problema es que el frontend no puede autenticarse');
    console.log('   ‚Ä¢ Los errores 401 indican tokens expirados o inv√°lidos');
    console.log('');

    // 4. Soluciones espec√≠ficas
    console.log('4Ô∏è‚É£ SOLUCIONES ESPEC√çFICAS');
    console.log('--------------------------');
    console.log('üõ†Ô∏è Para el problema de ControlFile:');
    console.log('');
    console.log('   A. PROBLEMA DE AUTENTICACI√ìN:');
    console.log('      1. Cerrar sesi√≥n en la aplicaci√≥n web');
    console.log('      2. Limpiar cach√© del navegador');
    console.log('      3. Volver a iniciar sesi√≥n');
    console.log('      4. Verificar que el token se genera correctamente');
    console.log('');
    console.log('   B. PROBLEMA DE CONFIGURACI√ìN:');
    console.log('      1. Verificar que el usuario existe en Firestore');
    console.log('      2. Verificar que el usuario tiene permisos');
    console.log('      3. Verificar configuraci√≥n de Firebase Admin SDK');
    console.log('');
    console.log('   C. PROBLEMA DE CORS:');
    console.log('      1. Deshabilitar extensiones del navegador');
    console.log('      2. Usar modo inc√≥gnito');
    console.log('      3. Verificar configuraci√≥n de CORS en el backend');
    console.log('');

    // 5. Verificaci√≥n de configuraci√≥n
    console.log('5Ô∏è‚É£ VERIFICACI√ìN DE CONFIGURACI√ìN');
    console.log('--------------------------------');
    console.log('üîß Configuraci√≥n actual:');
    console.log('   ‚Ä¢ Backend URL: https://controlauditv2.onrender.com');
    console.log('   ‚Ä¢ Firebase Project: auditoria-f9fc4');
    console.log('   ‚Ä¢ Environment: production');
    console.log('   ‚Ä¢ CORS Origin: https://auditoria.controldoc.app');
    console.log('');
    console.log('‚ö†Ô∏è PROBLEMA IDENTIFICADO:');
    console.log('   El backend est√° configurado para desarrollo pero corriendo en producci√≥n');
    console.log('   Esto puede causar problemas de configuraci√≥n de Firebase Admin SDK');
    console.log('');

    // 6. Pasos para solucionar
    console.log('6Ô∏è‚É£ PASOS PARA SOLUCIONAR');
    console.log('------------------------');
    console.log('üìã Lista de verificaci√≥n:');
    console.log('');
    console.log('   ‚úÖ 1. Backend funcionando (verificado)');
    console.log('   ‚úÖ 2. Endpoints implementados (verificado)');
    console.log('   ‚úÖ 3. CORS configurado correctamente (verificado)');
    console.log('   ‚ùå 4. Autenticaci√≥n funcionando (problema identificado)');
    console.log('   ‚ùå 5. Tokens v√°lidos (problema identificado)');
    console.log('');
    console.log('üéØ ACCI√ìN REQUERIDA:');
    console.log('   El problema principal es la autenticaci√≥n. Necesitas:');
    console.log('   1. Cerrar sesi√≥n en la aplicaci√≥n web');
    console.log('   2. Limpiar cach√© del navegador');
    console.log('   3. Volver a iniciar sesi√≥n');
    console.log('   4. Si el problema persiste, contactar al administrador');
    console.log('');

  } catch (error) {
    console.error('üí• Error en la verificaci√≥n:', error);
    console.error('üîç Detalles:', {
      code: error.code,
      message: error.message,
      stack: error.stack
    });
  }
}

// Ejecutar la verificaci√≥n
fixControlFileStatus();
