// src/utils/googleAuthInitializer.js
// Inicializaci√≥n de Google Auth para APK

import { isAPK } from './googleAuthAPK';
import { FIREBASE_APK_CONFIG } from '../config/firebaseAPK';

// Funci√≥n para inicializar Google Auth al arrancar la app
export const initializeGoogleAuth = async () => {
  try {
    // Solo inicializar si estamos en APK
    if (!isAPK()) {
      console.log('üåê Web detectado, Google Auth nativo no disponible');
      return;
    }

    console.log('üì± Inicializando Google Auth nativo para APK...');
    
    // ‚úÖ Verificar que estemos en un entorno de Capacitor
    if (typeof window === 'undefined' || !window.Capacitor) {
      console.log('‚ö†Ô∏è Capacitor no disponible, saltando inicializaci√≥n');
      return;
    }
    
    // ‚úÖ Importar din√°micamente solo si es necesario
    let GoogleAuth;
    try {
      // Intentar importar el plugin
      const module = await import('@southdevs/capacitor-google-auth');
      GoogleAuth = module.GoogleAuth;
      
      if (!GoogleAuth) {
        throw new Error('GoogleAuth no disponible en el m√≥dulo');
      }
    } catch (importError) {
      console.error('‚ùå Error importando Google Auth plugin:', importError);
      console.log('‚ö†Ô∏è Continuando sin Google Auth nativo');
      return;
    }
    
    // ‚úÖ Usar el Web Client ID correcto de la configuraci√≥n
    const webClientId = FIREBASE_APK_CONFIG.oauth.webClientId;
    console.log('üì± Web Client ID configurado:', webClientId);
    
    // ‚úÖ Inicializar con el Client ID correcto
    try {
      await GoogleAuth.initialize({
        clientId: webClientId,
        scopes: ['email', 'profile']
      });
      
      console.log('‚úÖ Google Auth nativo inicializado correctamente');
    } catch (initError) {
      console.error('‚ùå Error inicializando Google Auth:', initError);
      console.log('‚ö†Ô∏è Google Auth no se pudo inicializar, pero la app continuar√° funcionando');
    }
    
  } catch (error) {
    console.error('‚ùå Error general en initializeGoogleAuth:', error);
    
    // ‚úÖ No lanzar error para evitar que la app falle al arrancar
    // Solo log del error y continuar
    console.log('‚ö†Ô∏è La app continuar√° funcionando sin Google Auth nativo');
  }
};

// Funci√≥n para verificar si Google Auth est√° disponible
export const isGoogleAuthAvailable = () => {
  try {
    // ‚úÖ Verificar m√∫ltiples condiciones
    return (
      isAPK() && 
      typeof window !== 'undefined' && 
      window.Capacitor && 
      window.Capacitor.isNative
    );
  } catch (error) {
    console.warn('‚ö†Ô∏è Error verificando disponibilidad de Google Auth:', error);
    return false;
  }
};

// Funci√≥n para obtener el plugin de Google Auth de forma segura
export const getGoogleAuthPlugin = async () => {
  try {
    if (!isGoogleAuthAvailable()) {
      return null;
    }
    
    const module = await import('@southdevs/capacitor-google-auth');
    return module.GoogleAuth || null;
  } catch (error) {
    console.error('‚ùå Error obteniendo plugin de Google Auth:', error);
    return null;
  }
};
