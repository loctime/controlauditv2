import { Capacitor } from '@capacitor/core';
import { Device } from '@capacitor/device';

async function runDeviceDiagnostics() {
  console.log('üîç Diagn√≥stico detallado de informaci√≥n del dispositivo');
  
  try {
    // Informaci√≥n del dispositivo
    const info = await Device.getInfo();
    console.log('üì± Informaci√≥n del Dispositivo:');
    console.log('Modelo:', info.model);
    console.log('Plataforma:', info.platform);
    console.log('Versi√≥n del Sistema Operativo:', info.osVersion);
    console.log('Fabricante:', info.manufacturer);
    console.log('Tipo de Dispositivo:', info.type);
    
    // Informaci√≥n de la aplicaci√≥n
    console.log('\nüì≤ Informaci√≥n de la Aplicaci√≥n:');
    const config = Capacitor.getConfig();
    console.log('ID de la Aplicaci√≥n:', config?.appId || 'No disponible');
    console.log('Nombre de la Aplicaci√≥n:', config?.appName || 'No disponible');
    
    // Informaci√≥n de red
    console.log('\nüåê Informaci√≥n de Red:');
    const networkStatus = await Device.getNetworkStatus();
    console.log('Estado de la Red:', JSON.stringify(networkStatus, null, 2));
    
    // Informaci√≥n de bater√≠a
    console.log('\nüîã Informaci√≥n de Bater√≠a:');
    const batteryInfo = await Device.getBatteryInfo();
    console.log('Estado de la Bater√≠a:', JSON.stringify(batteryInfo, null, 2));
    
    // Informaci√≥n de localizaci√≥n
    console.log('\nüåç Informaci√≥n de Localizaci√≥n:');
    const language = await Device.getLanguageCode();
    console.log('C√≥digo de Idioma:', language.value);
    
  } catch (error) {
    console.error('‚ùå Error en diagn√≥stico de dispositivo:', error);
  }
}

// Ejecutar diagn√≥stico
runDeviceDiagnostics().catch(console.error);
